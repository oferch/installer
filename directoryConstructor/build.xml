<?xml version="1.0" encoding="UTF-8"?>
<project name="Directory Constructor" default="Pack" phingVersion="2.4.13">
	<taskdef name="ForEachXmlElement" classpath="../lib" classname="phing.ForEachXmlElementTask" />
	<taskdef name="ExportSpecificProperties" classpath="../lib" classname="phing.ExportSpecificPropertiesTask" />
	<taskdef name="Dos2Unix" classpath="../lib" classname="phing.Dos2UnixTask" />
	<taskdef name="CreateUser" classpath="../lib" classname="phing.user.CreateUserTask" />
	<taskdef name="ProgressBarStart" classpath="../lib" classname="phing.progress.ProgressBarStartTask" />
	<taskdef name="ProgressBarEnd" classpath="../lib" classname="phing.progress.ProgressBarEndTask" />
	<taskdef name="ProgressBarIncrement" classpath="../lib" classname="phing.progress.ProgressBarIncrementTask" />
	<taskdef name="ProgressBarTitle" classpath="../lib" classname="phing.progress.ProgressBarTitleTask" />
	<taskdef name="ProgressBarTar" classpath="../lib" classname="phing.progress.ProgressBarTarTask" />
	
	<target name="Init">
		<property name="actions.makeDir" value="false" />
		<property name="actions.fetchCode" value="false" />
		<property name="actions.createUser" value="false" />
		<property name="actions.setOwner" value="false" />
		<property name="actions.setPermissions" value="false" />
		<property name="actions.dos2Unix" value="false" />
		<property name="actions.package" value="false" />
	</target>
	
	<target name="Pack" depends="Init">
		<property name="actions.makeDir" value="true" override="true" />
		<property name="actions.fetchCode" value="true" override="true" />
		<property name="actions.setPermissions" value="true" override="true" />
		<property name="actions.dos2Unix" value="true" override="true" />
		<property name="actions.package" value="true" override="true" />
		
		<phingcall target="Init Progress Bar" />
		<phingcall target="Construct tree" />
		
		<ProgressBarEnd />
	</target>
	
	<target name="Construct" depends="Init">
		<property name="actions.makeDir" value="true" override="true" />
		<property name="actions.fetchCode" value="true" override="true" />
		
		<phingcall target="Construct tree" />
	</target>
	
	<target name="Create-Users" depends="Init">
		<property name="actions.createUser" value="true" override="true" />
		
		<phingcall target="Construct tree" />
	</target>
	
	<target name="Update-Permissions" depends="Init">
		<property name="actions.createUser" value="true" override="true" />
		<property name="actions.setOwner" value="true" override="true" />
		<property name="actions.setPermissions" value="true" override="true" />
		<phingcall target="Construct tree" />
	</target>
	
	<target name="Dos2Unix" depends="Init">
		<property name="actions.dos2Unix" value="true" override="true" />
		<phingcall target="Construct tree" />
	</target>
	
	<target name="Package" depends="Init">
		<property name="actions.package" value="true" override="true" />
		<phingcall target="Construct tree" />
	</target>
	
	<target name="Load configuration" depends="Init">
		<property file="build.properties" override="false" />
	</target>
	
	<target name="Init Progress Bar" depends="Load configuration">
		<ProgressBarStart name="main" titleWidth="5" title="Total" />
		<ForEachXmlElement file="${xml.uri}" skipRoot="false" xPathSkipRoot="false" xPathLengthParamName="directories.strlen" nodeCountParamName="directories.count" />
		<echo message="Directories count [${directories.count}]" />
		<ProgressBarStart name="directories" max="${directories.count}" titleWidth="50" parentName="main" percentOfParent="60" title="Download code" />
	</target>
	
	<target name="Construct tree" depends="Load configuration">
		<echo message="Construct Kaltura directories tree [${BASE_DIR}]" />
		
		<ForEachXmlElement file="${xml.uri}" skipRoot="false" xPathSkipRoot="false" elementPrefix="directory" xPathParam="directory.path" target="Construct directory" />
		<ProgressBarEnd name="directories" />
		
		<if>
			<istrue value="${actions.dos2Unix}" />
			<then>
				<if>
					<istrue value="${actions.package}" />
					<then>
						<ProgressBarStart name="dos2Unix" titleWidth="50" parentName="main" percentOfParent="20" title="Dos to Unix" />
					</then>
					<else>
						<ProgressBarStart name="dos2Unix" titleWidth="50" parentName="main" percentOfParent="40" title="Dos to Unix" />
					</else>
				</if>
				
				<Dos2Unix progressBarName="dos2Unix">
					<fileset dir="${BASE_DIR}" defaultexcludes="false">
						<type type="file" />
						<include name="**/*.sh" />
						<include name="**/*.php" />
						<include name="**/*template*" />
					</fileset>
				</Dos2Unix>
				<ProgressBarEnd name="dos2Unix" />
			</then>
		</if>
		
		<if>
			<istrue value="${actions.package}" />
			<then>
				
				<property name="version.ini.type" value="${package.type}" />
				<property name="version.ini.number" value="${package.version}" />
				<ExportSpecificProperties allowedPropertyPrefixes="version.ini." removePrefix="true" targetFile="${BASE_DIR}/package/version.ini" />
				
				<if>
					<available file="${phing.dir}/../user_input.ini" type="file" />
					<then>
						<resolvepath propertyName="user.input.ini" file="${phing.dir}/../user_input.ini" />
						<copy file="${user.input.ini}" tofile="${BASE_DIR}/installer/user_input.ini" overwrite="true"/>
					</then>
				</if>
				
				<resolvepath propertyName="tar.dir" file="${BASE_DIR}/../"/>
				<property name="tar.file" value="${package.dir}/${package.type}-${package.version}.tgz" />
				<if>
					<available file="${tar.file}"/>
					<then>
						<delete file="${tar.file}"/>
					</then>
				</if>
				<ProgressBarStart name="package" titleWidth="50" parentName="main" percentOfParent="20" title="Package" />
				<ProgressBarTar name="package" destfile="${tar.file}" basedir="${tar.dir}" />
				<ProgressBarEnd name="package" />
			</then>
		</if>
	</target>
    
	<target name="Estimate Process">
		<php returnProperty="directories.temp" expression="${directories.count} + 1" />
		<property name="directories.count" value="${directories.temp}" environment="main" override="true" />
		<echo message="Directories temp [${directories.count}]" />
	</target>
	
	<target name="Construct directory">
		
		<property name="directory.fullPath" value="${BASE_DIR}${directory.path}" />
		<echo message="Construct directory [${directory.fullPath}]" />
		<ProgressBarTitle name="directories" title="Make dir     - ${directory.path}" />
		
		<!-- Create directory -->
		<if>
			<istrue value="${actions.makeDir}" />
			<then>
				<if>
					<available file="${directory.fullPath}" type="dir" />
					<then>
						<echo message="Directory [${directory.fullPath}] already exists" />
					</then>
					<else>
						<mkdir dir="${directory.fullPath}" />
					</else>
				</if>
			</then>
		</if>
		<resolvepath propertyName="directory.fullPath" file="${directory.fullPath}" />
		
		<!-- Get directory content -->
		<if>
			<istrue value="${actions.fetchCode}" />
			<then>
				<if>
					<isset property="directory.attributes.${directory.id}.gitPath" />
					<then>
						<ProgressBarTitle name="directories" title="Checkout git - ${directory.path}" />
						<if>
							<available file="${directory.fullPath}/.git" type="dir" />
							<then>
								<echo message="Pull git repository [${directory.fullPath}]" />
								<if>
									<isset property="directory.attributes.${directory.id}.gitBranch" />
									<then>
										<gitpull gitPath="${git.bin}" repository="${directory.fullPath}" strategy="recursive" source="." refspec="${directory.attributes.${directory.id}.gitBranch}" />
									</then>
									<else>
										<gitpull gitPath="${git.bin}" repository="${directory.fullPath}" strategy="recursive" all="true" />
									</else>
								</if>
							</then>
							<else>
								<property name="directory.gitUrl" value="${git.protocol}://${git.domain}${directory.attributes.${directory.id}.gitPath}" />
								<echo message="Clone from git URL [${directory.gitUrl}]" />
								<gitclone gitPath="${git.bin}" repository="${directory.gitUrl}" targetPath="${directory.fullPath}" />
								<gitfetch gitPath="${git.bin}" source="${directory.gitUrl}" repository="${directory.fullPath}" all="true" />
								<if>
									<isset property="directory.attributes.${directory.id}.gitBranch" />
									<then>
										<gitcheckout gitPath="${git.bin}" repository="${directory.fullPath}" branchname="${directory.attributes.${directory.id}.gitBranch}" />
									</then>
								</if>
							</else>
						</if>
					</then>
				</if>
				
				<if>
					<isset property="directory.attributes.${directory.id}.svnPath" />
					<then>
						<ProgressBarTitle name="directories" title="Checkout svn - ${directory.path}" />
						<chmod file="${svn.key}" mode="600" />
						
						<property name="svn.ssh.cmd" value="${svn.ssh.bin} -q -i ${svn.key}" />
						<if>
							<and>
								<not><isset property="${VERBOSE}" /></not>
								<equals arg1="${VERBOSE}" arg2="true" />
							</and>
							<then>
								<property name="svn.ssh.cmd" value="${svn.ssh.bin} -v -i ${svn.key}" override="true" />
							</then>
							<else>
								<property name="svn.bin" value="${svn.bin} -q" override="true" />
							</else>
						</if>
							
						<if>
							<and>
								<available file="${directory.fullPath}/.svn" type="dir" />
								<or>
									<not><isset property="directory.attributes.${directory.id}.override" /></not>
									<equals arg1="${directory.attributes.${directory.id}.override}" arg2="false" />
								</or>
							</and>
							<then>
								<echo message="Revert svn repository [${directory.fullPath}]" />
								<property name="svn.cmd" value="${svn.bin} --config-option config:tunnels:ssh=&quot;${svn.ssh.cmd}&quot; revert --recursive &quot;${directory.fullPath}&quot;" />
								<echo message="Executing: ${svn.cmd}" />
								<exec passthru="true" checkreturn="false" returnProperty="svn.ret" command="${svn.cmd}" />
								<echo message="Revert exit code [${svn.ret}]" />
								<if>
									<not><equals arg1="${svn.ret}" arg2="0" /></not>
									<then>
										<echo message="Update svn repository [${directory.fullPath}]" />
										<property name="svn.cmd" value="${svn.bin} --config-option config:tunnels:ssh=&quot;${svn.ssh.cmd}&quot; update --force --accept theirs-full &quot;${directory.fullPath}&quot;" />
										<echo message="Executing: ${svn.cmd}" />
										<exec passthru="true" checkreturn="false" returnProperty="svn.ret" command="${svn.cmd}" />
									</then>
								</if>
							</then>
							<else>
								<if>
									<isset property="directory.attributes.${directory.id}.override" />
									<then>
										<echo message="Export from svn [${svn.protocol}://${svn.username}@${svn.domain}${directory.attributes.${directory.id}.svnPath}] to [${directory.fullPath}]" />
										<property name="svn.cmd" value="${svn.bin} --config-option config:tunnels:ssh=&quot;${svn.ssh.cmd}&quot; --force export ${svn.protocol}://${svn.username}@${svn.domain}${directory.attributes.${directory.id}.svnPath} &quot;${directory.fullPath}&quot;" />
									</then>
									<else>
										<echo message="Checkout from svn [${svn.protocol}://${svn.username}@${svn.domain}${directory.attributes.${directory.id}.svnPath}] to [${directory.fullPath}]" />
										<property name="svn.cmd" value="${svn.bin} --config-option config:tunnels:ssh=&quot;${svn.ssh.cmd}&quot; checkout ${svn.protocol}://${svn.username}@${svn.domain}${directory.attributes.${directory.id}.svnPath} &quot;${directory.fullPath}&quot;" />
									</else>
								</if>
								<echo message="Executing: ${svn.cmd}" />
								<exec passthru="true" checkreturn="true" command="${svn.cmd}" />
							</else>
						</if>
					</then>
				</if>
				<if>
					<isset property="directory.attributes.${directory.id}.gitTag"/>
					<then>
						<ProgressBarTitle name="directories" title="Download Git Release - ${directory.path}" />
						<echo message="Downloading git release ${directory.attributes.${directory.id}.gitTag}"/>
						<exec command="./html5lib.sh ${directory.attributes.${directory.id}.gitTag} ./${directory.attributes.${directory.id}.gitTag}"/>
					</then>
				</if>
			</then>
		</if>
		
		
		<if>
			<or>
				<istrue value="${actions.setOwner}" />
				<istrue value="${actions.setPermissions}" />
				<istrue value="${actions.createUser}" />
			</or>
			<then>
				<phingcall target="Set permissions folder" />
			</then>
		</if>
		
		<ProgressBarIncrement name="directories" />
	</target>
	
	<target name="Set permissions folder">
		
		<!-- Change directory permissions and ownership -->
		<if>
			<!-- user default value -->
			<isset property="permissions.user" />
			<then>
				<property name="user" value="${permissions.user}" override="true" />
			</then>
		</if>
		<if>
			<!-- group default value -->
			<isset property="permissions.group" />
			<then>
				<property name="group" value="${permissions.group}" override="true" />
			</then>
		</if>
		<if>
			<!-- user value from xml -->
			<isset property="directory.attributes.${directory.id}.user" />
			<then>
				<property name="user" value="${directory.attributes.${directory.id}.user}" override="true" />
			</then>
		</if>
		<if>
			<!-- group value from xml -->
			<isset property="directory.attributes.${directory.id}.group" />
			<then>
				<property name="group" value="${directory.attributes.${directory.id}.group}" override="true" />
			</then>
		</if>
		<if>
			<!-- change user and group -->
			<and>
				<not><os family="windows" /></not>
				<isset property="user" />
				<isset property="group" />
			</and>
			<then>
				
				<if>
					<and>
						<istrue value="${actions.createUser}" />
						<os family="unix" />
					</and>
					<then>
						<CreateUser username="${user}" group="${user}" groups="${group}" uid="${permissions.${user}.uid}" gid="${permissions.${group}.gid}" ifNotExists="true" />
					</then>
				</if>
				
				<if>
					<and>
						<istrue value="${actions.setOwner}" />
						<available file="${directory.fullPath}" type="dir" />
					</and>
					<then>
						<ProgressBarTitle name="directories" title="Set owner    - ${directory.path}" />
						<echo message="Change directory [${directory.fullPath}] group [${group}] and user [${user}]" />
						<chown file="${directory.fullPath}" user="${user}.${group}" failonerror="${permissions.required}" />
						<if>
							<not><isset property="directory.attributes.${directory.id}.skipFilesOwner" /></not>
							<then>
								<chown user="${user}.${group}" failonerror="${permissions.required}" >
									<fileset dir="${directory.fullPath}" defaultexcludes="false" />
								</chown>
							</then>
						</if>
					</then>
				</if>
				
			</then>
		</if>
		
		<if>
			<!-- default mode value from properties -->
			<not><isset property="mode" /></not>
			<then>
				<property name="mode" value="${permissions.mode.directory}" override="true" />
			</then>
		</if>
		<if>
			<!-- mode value from xml -->
			<isset property="directory.attributes.${directory.id}.mode" />
			<then>
				<property name="mode" value="${directory.attributes.${directory.id}.mode}" override="true" />
			</then>
		</if>
		
		<if>
			<!-- default mode value from properties -->
			<not><isset property="filesMode" /></not>
			<then>
				<property name="filesMode" value="${permissions.mode.content}" override="true" />
			</then>
		</if>
		<if>
			<!-- mode value from xml -->
			<isset property="directory.attributes.${directory.id}.filesMode" />
			<then>
				<property name="filesMode" value="${directory.attributes.${directory.id}.filesMode}" override="true" />
			</then>
		</if>
		
		<if>
			<!-- default mode value from properties -->
			<not><isset property="scriptsMode" /></not>
			<then>
				<property name="scriptsMode" value="${permissions.mode.scripts}" override="true" />
			</then>
		</if>
		<if>
			<!-- mode value from xml -->
			<isset property="directory.attributes.${directory.id}.scriptsMode" />
			<then>
				<property name="scriptsMode" value="${directory.attributes.${directory.id}.scriptsMode}" override="true" />
			</then>
		</if>
		
		<if>
			<and>
				<istrue value="${actions.setPermissions}" />
				<available file="${directory.fullPath}" type="dir" />
			</and>
			<then>
				<ProgressBarTitle name="directories" title="Permissions  - ${directory.path}" />
				<echo message="Set directory [${directory.fullPath}] permissions [${mode}]" />
				<chmod file="${directory.fullPath}" mode="${mode}" failonerror="${permissions.required}" />
				<if>
					<not><isset property="directory.attributes.${directory.id}.skipFilesMode" /></not>
					<then>
						
						<chmod mode="${mode}" failonerror="${permissions.required}">
							<fileset dir="${directory.fullPath}" defaultexcludes="false">
								<type type="dir" />
							</fileset>
						</chmod>
						
						<chmod mode="${filesMode}" failonerror="${permissions.required}">
							<fileset dir="${directory.fullPath}" defaultexcludes="false" excludes="${permissions.mode.scripts.pattern}">
								<type type="file" />
							</fileset>
						</chmod>
						
						<chmod mode="${scriptsMode}" failonerror="${permissions.required}">
							<fileset dir="${directory.fullPath}" defaultexcludes="false" includes="${permissions.mode.scripts.pattern}">
								<type type="file" />
							</fileset>
						</chmod>
						
					</then>
				</if>
			</then>
		</if>
		
	</target>
	
</project>
